<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daewooenc.pips.admin.core.dao.authorization.PasswordMapper">
	<update id="updateAuthForReset" parameterType="com.daewooenc.pips.admin.core.domain.authorization.AuthPassword">
		UPDATE /* PasswordMapper.xml.updateAuthForReset */
			T_USER
		SET
			auth_code = #{authPassword.authCode},
			auth_expire_dt = NOW()
		WHERE
			user_id = #{authPassword.userId, jdbcType=VARCHAR}
		AND
			tel_no = to_base64(aes_encrypt(#{authPassword.telNo}, sha2(#{encKey}, 512)))
	</update>

	<update id="updateAuthCompleteForReset" parameterType="com.daewooenc.pips.admin.core.domain.authorization.AuthPassword">
		UPDATE /* PasswordMapper.xml.updateAuthForReset */
			T_USER
		SET
			is_auth = 'Y'
		WHERE
			user_id = #{authPassword.userId, jdbcType=VARCHAR}
		AND
			tel_no = to_base64(aes_encrypt(#{authPassword.telNo}, sha2(#{encKey}, 512)))
	</update>

	<update id="updatePasswordForReset" parameterType="com.daewooenc.pips.admin.core.domain.authorization.ChangePassword">
		UPDATE /* PasswordMapper.xml.updatePasswordForReset */
			T_USER
		SET
			password2 = password1,
			password1 = password,
			password = #{changePassword.newPassword, jdbcType=VARCHAR}
		WHERE
			user_id  = #{changePassword.userId, jdbcType=VARCHAR}
	</update>

	<update id="updatePassword" parameterType="com.daewooenc.pips.admin.core.domain.authorization.ChangePassword">
		UPDATE /* PasswordMapper.xml.updatePassword */
			T_USER
		SET
			password2 = password1,
			password1 = password,
			password = #{changePassword.newPassword, jdbcType=VARCHAR},
			tel_no = to_base64(aes_encrypt(#{changePassword.telNo}, sha2(#{encKey}, 512))),
			init_account = 'N'
			<choose>
				<when test="'${dbms.kind}' == 'MYSQL'">
				, password_due_date = DATE_FORMAT(DATE_ADD(now(), interval password_change_period day), '%Y%m%d')
				</when>
				<when test="'${dbms.kind}' == 'MSSQL'">
				, password_due_date = CONVERT(VARCHAR(8), GETDATE() + password_change_period, 112)
				</when>				
				<otherwise>
				, password_due_date = TO_CHAR(SYSDATE + password_change_period, 'yyyymmdd')
				</otherwise>
			</choose>
		WHERE
			user_id  = #{changePassword.userId, jdbcType=VARCHAR}
		AND password = #{changePassword.currentPassword, jdbcType=VARCHAR}
     </update>


	<select id="checkPassword" parameterType="com.daewooenc.pips.admin.core.domain.authorization.ChangePassword"  resultType="com.daewooenc.pips.admin.core.domain.authorization.User">
		SELECT /* PasswordMapper.xml.checkPassword */ user_id, password1, password2
		  FROM T_USER
		 WHERE user_id  = #{changePassword.userId, jdbcType=VARCHAR}
    </select>

	<select id="selectAuth" parameterType="String"  resultType="com.daewooenc.pips.admin.core.domain.authorization.AuthPassword">
		SELECT /* PasswordMapper.xml.selectAuth */ *
		FROM T_USER
		WHERE user_id  = #{userId}
	</select>
</mapper>
